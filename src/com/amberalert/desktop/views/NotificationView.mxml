<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:skins="com.amberalert.desktop.views.skins.*">

	<s:layout><s:VerticalLayout/></s:layout>


	<fx:Script>
		<![CDATA[
			import com.amberalert.desktop.models.AMBERAlert;
			import com.amberalert.desktop.models.Data;
			import com.amberalert.desktop.models.Location;
			import com.amberalert.desktop.models.Person;
			import com.amberalert.desktop.models.Vehicle;
			
			import mx.collections.ArrayCollection;
			

			private var index:int;
			private var _currentAlert:AMBERAlert;
			[Bindable] public var currentAlerts:ArrayCollection; 
			[Bindable] private var _currentSuspect:Person = new Person();
			[Bindable] private var _currentVictim:Person = new Person();
			[Bindable] private var _currentLocation:Location = new Location();
			[Bindable] private var _currentVehicle:Vehicle = new Vehicle();
			[Bindable] private var googleMapLink:String;

			
			import flash.events.Event;
			import flash.events.MouseEvent;
			
			[Bindable] public var alertExists:Boolean;
			
			[Bindable]
			public function set currentAlert(value:AMBERAlert):void
			{
				if(value != null)
				{
					index = 0;
					_currentAlert = value;
					//When an alert is set set all these variables so it's easier to bind them to the view
					//TODO reset all indexes and use indexes instead of finite number 0 to implement multiple suspect,victims,vehicles,and locations views
					_currentSuspect = value.suspects.getItemAt(index) as Person;
					_currentVictim = value.victims.getItemAt(index) as Person;
					_currentLocation = value.locations.getItemAt(index) as Location;
					_currentVehicle = value.vehicles.getItemAt(index) as Vehicle;
					googleMapLink = "http://maps.google.com/maps/api/staticmap?center=" + _currentLocation.lastSeenLat + "," + _currentLocation.lastSeenLon + "&zoom=13&size=200x200&sensor=false";	
				}
				else
				{
					_currentAlert = new AMBERAlert();
					_currentSuspect = new Person();
					_currentVictim = new Person();
					_currentLocation = new Location();
					_currentVehicle = new Vehicle();
				}
			}
			
			public function get currentAlert():AMBERAlert
			{
				return _currentAlert;
			}
			
			
			protected function alertSiteInfo_clickHandler(event:MouseEvent):void
			{
				//URL to the alert is constructed and opened in new tab
				var req:URLRequest = new URLRequest('http://amberalert.com/' + _currentAlert.uid);
				navigateToURL(req, "_blank");
			}
			
			protected function mapImage_clickHandler(event:MouseEvent):void
			{
				// opens URL to map image
				var reqMap:URLRequest = new URLRequest("http://maps.google.com/maps/api/staticmap?center=" + _currentLocation.lastSeenLat + "," + _currentLocation.lastSeenLon + "&zoom=15&size=600x500&sensor=false");
				navigateToURL(reqMap, "_blank");
			}
			
			protected function nextAlert():void
			{
				// dispatch an event to be routed to glue and then routed to alertscontroller
				dispatchEvent(new Event('nextAlert'));
			}
			
			protected function prevAlert():void
			{
				// dispatch an event to be routed to glue and then routed to alertscontroller
				dispatchEvent(new Event('prevAlert'));
			}
			
			protected function listView():void
			{
				// dispatch an event to be routed to glue and then routed to alertscontroller
				dispatchEvent(new Event('listView'));
			}
			public var alertCount:int = 0;
		]]>
	</fx:Script>
	<s:Label  text="No ACTIVE AMBER Alerts" visible="{!alertExists}" includeInLayout="{!alertExists}"/>
	<s:List height="100%" width="100%" dataProvider="{currentAlerts}" skinClass="com.amberalert.desktop.views.skins.ListSkin" itemRenderer="com.amberalert.desktop.views.skins.AlertRenderer"/>
<!--
	<s:Label  text="No ACTIVE AMBER Alerts" visible="{!alertExists}" includeInLayout="{!alertExists}"/>
	
	<s:Label text="AMBER Alerts" visible="{alertExists}" includeInLayout="{alertExists}"/>
	<s:Group visible="{alertExists}" includeInLayout="{alertExists}">
		<s:layout><s:HorizontalLayout/></s:layout>
		<s:Group visible="{alertExists}" includeInLayout="{alertExists}">
			<s:layout><s:VerticalLayout/></s:layout>
			<s:Label text = "Victims"/>
		</s:Group>
		<s:Group visible="{alertExists}" includeInLayout="{alertExists}">
			<s:layout><s:VerticalLayout/></s:layout>
			<s:Label text = "Victims Name"/>
		</s:Group>
		<s:Group visible="{alertExists}" includeInLayout="{alertExists}">
			<s:layout><s:VerticalLayout/></s:layout>
			<s:Label text = "Description"/>
			<s:Label  text= "{currentAlert.description}"/>
		</s:Group>
		<s:Group visible="{alertExists}" includeInLayout="{alertExists}">
			<s:layout><s:VerticalLayout/></s:layout>
			<s:Label text = "Get the word out"/>
		</s:Group>
	</s:Group>
	<s:Group visible="{alertExists}" includeInLayout="{alertExists}">
		<s:layout><s:HorizontalLayout/></s:layout>
		<mx:Button label="Prev" click= "prevAlert()"/>
		<mx:Button label="Next" click= "nextAlert()"/>
	</s:Group>
>>>>>>> skinningAppTom:src/com/amberalert/desktop/views/NotificationView.mxml
	-->
</s:Group>

